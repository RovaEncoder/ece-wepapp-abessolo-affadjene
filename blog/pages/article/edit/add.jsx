import { supabase } from "../../../utils/supabase";
import Layout from "../../../layout/layout";
import React from "react";
import Head from "next/head";

export default function Post() {
	async function handleSubmit(event) {
		event.preventDefault();

		const title = event.target.title.value;
		const description = event.target.description.value;
		const content = event.target.content.value;
		const imageUrl = event.target.url.value;

		const body = {
			title,
			body: content,
			description,
			imageUrl,
			author: "07bf408c-a0c9-473e-8f9e-48a8f66c1ddb",
		};
		const { error } = await supabase.from("articles").insert(body);
		console.log(body);

		if (error) {
			console.log("Oups !", error.message);
		}
	}

	return (
		<>
			<Head>
				<title>Blog</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Layout>
				<h4>On raconte quoi aujourd'hui ?</h4>
				<div>
					<form onSubmit={handleSubmit} className="form-add">
						<input
							required
							type="text"
							name="title"
							placeholder="Tapez le titre de votre article"
						/>
						<input
							type="url"
							name="url"
							placeholder="Inserez l'url de l'image representatrice de votre article"
						/>
						<input
							required
							type="text"
							name="description"
							placeholder="Tapez la description"
						/>
						<textarea
							required
							name="content"
							rows="10"
							cols="80"
							placeholder="Tapez le contenu de la section 1"
						></textarea>

						<button className="buttonsend">Poster</button>
					</form>
				</div>
			</Layout>
		</>
	);
}

// export async function getServerSideProps({ params }) {
// 	const { data: article, error } = await supabase
// 		.from("articles")
// 		.select("*")
// 		.eq("id", params.article)
// 		.single();

// 	if (error) {
// 		throw new Error(error);
// 	}

// 	return {
// 		props: {
// 			article,
// 		},
// 	};
// }

// export async function getStaticPaths() {
// 	const { data } = await supabase.from("profiles").select("*");

// 	const paths = data.map((item) => ({
// 		params: { article: item.id.toString() },
// 	}));

// 	return {
// 		paths,
// 		fallback: false,
// 	};
// }
